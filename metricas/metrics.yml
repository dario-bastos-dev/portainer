services:
  prometheus:
    image: prom/prometheus:v3.4.1
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - prometheus_data:/prometheus
      - /root/portainer/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - dev-network
      - traefik-public
    deploy:
      labels:
        # --- Configuração do Traefik ---
        - traefik.enable=true

        # --- Roteador ---
        - traefik.http.routers.prometheus.rule=Host(`prometheus.<YOUR_DOMAIN>`)
        - traefik.http.routers.prometheus.entrypoints=websecure
        - traefik.http.routers.prometheus.service=prometheus
        - traefik.http.routers.prometheus.tls.certresolver=letsencrypt

        # --- Serviço ---
        - traefik.http.services.prometheus.loadbalancer.server.port=9090
        - traefik.http.services.prometheus.loadbalancer.passHostHeader=true
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      

  grafana:
    image: grafana/grafana:12.0.1
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"
    environment:
      - GF_SERVER_ROOT_URL=https://grafana.<YOUR_DOMAIN>
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - dev-network
      - traefik-public
    deploy:
      labels:
        # --- Configuração do Traefik ---
        - traefik.enable=true

        # --- Roteador ---
        - traefik.http.routers.grafana.rule=Host(`grafana.<YOUR_DOMAIN>`)
        - traefik.http.routers.grafana.entrypoints=websecure
        - traefik.http.routers.grafana.service=grafana
        - traefik.http.routers.grafana.tls.certresolver=letsencrypt

        # --- Serviço ---
        - traefik.http.services.grafana.loadbalancer.server.port=3000
        - traefik.http.services.grafana.loadbalancer.passHostHeader=true
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

volumes:
  prometheus_data:
  grafana_data:

networks:
  dev-network:
    external: true
  traefik-public:
    external: true
      